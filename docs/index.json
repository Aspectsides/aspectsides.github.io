[{"content":"5 Reasons why Arch Linux is the Best Linux Distribution What is Arch Linux? If you\u0026rsquo;ve been using Linux for any amount of time, you\u0026rsquo;ve likely heard of Arch Linux as the elitist\u0026rsquo;s Linux distro. This is due mainly to the fact that Arch used to be so goddamn hard to install. You had to go through all the trouble of installing drivers, a graphical environment and dependencies for said programs all through the TTY, without any graphical installation process to speak of. Nowadays, its gotten a lot easier to install Arch. Many Arch-based distros, including my preferred distro Asahi, have implemented graphical Calamares installation helpers. This means its gotten easier than ever to install Arch and take it for a spin. Here are five reasons why Arch Linux is the best Linux distribution.\n1. Rolling Release Updates Rolling release updates are a method of updating your system without any downtime by rolling out software updates as soon as they come out instead of in batches like most popular operating systems. The most popular example of this is, of course, Arch, but Gentoo is the oldest example of a rolling release software still in existence. The benefit of rolling release updates is the ability for you to get updates to software immediately without having to wait for the next big update. Having no downtime on updates helps tremendously too.\n2. Package Availibility Pacman is widely regarded as the fastest package manager among the popular package managers such as Debian\u0026rsquo;s apt and Fedora\u0026rsquo;s dnf. However, it\u0026rsquo;s real strength lies in its package availability. Pacman has access to the largest selection of repositories and software among all popular package managers. While it is not impossible for other distributions to get packages not available in their package repositories, nothing comes close to Arch\u0026rsquo;s ease of use when it comes to installing packages.\n3. The Arch User Repository As if the sheer amount of packages available in Arch Linux\u0026rsquo;s official repositories wasn\u0026rsquo;t enough, Arch also comes with easy access to something known as the Arch User Repository, which is a community driven repository for Arch users. With an AUR helper such as yay or paru, Arch users are able to download package descriptions (PKGBUILDS), that allow you to compile a package from source and then install it with Pacman. Since it is community driven, you can find almost everything on the AUR. Just paru your heart out.\n4. All Desktop Environments are at your Disposal I\u0026rsquo;ve never really been a desktop environment user (Qtile for the win!), but Arch Linux has superb compatability for all desktop environments. Most major Linux distributions are desktop environment specific. For example, Ubuntu comes preinstalled with the Gnome DE, but if you try installing another desktop environment such as KDE alongside Gnome, Ubuntu gets offended and you end up with a broken system. Though I don\u0026rsquo;t use them very often, I have DDE, KDE, GNOME, XFCE, and all my standalone window managers installed on my system and they coexist in perfect unity. I really should start uninstalling some of those DE\u0026rsquo;s.\n5. By the Community, for the Community Arch Linux is entirely maintained by the community. In fact, there is no real organizational nature to Arch. Distros like Ubuntu have Canonical as an overlord presiding over your user experience, and people have complained about their decisions for their operating system in the past. No such problem exists with Arch Linux. The community is in total control of what happens in Arch, the only official maintainers being release managers and maintainers for things such as pacman and main repos. Other than that, there is no company to completely mess up Arch Linux.\n","permalink":"https://aspectsides.github.io/posts/whyiusearch/","summary":"5 Reasons why Arch Linux is the Best Linux Distribution What is Arch Linux? If you\u0026rsquo;ve been using Linux for any amount of time, you\u0026rsquo;ve likely heard of Arch Linux as the elitist\u0026rsquo;s Linux distro. This is due mainly to the fact that Arch used to be so goddamn hard to install. You had to go through all the trouble of installing drivers, a graphical environment and dependencies for said programs all through the TTY, without any graphical installation process to speak of.","title":"Why I Use Arch Linux"},{"content":"About Me Hey. My name is Daniel, and I\u0026rsquo;m a C++ dev and firmly believe in Emacs supremacy and am an open source evangalist. I use Arch Linux on a daily basis.\nI also play Overwatch from time to time.\nContact me here.\nI also have a Gemini space over at gemini://tilde.club/~aspect. Go check it out if you want.\n","permalink":"https://aspectsides.github.io/aboutme/","summary":"About Me Hey. My name is Daniel, and I\u0026rsquo;m a C++ dev and firmly believe in Emacs supremacy and am an open source evangalist. I use Arch Linux on a daily basis.\nI also play Overwatch from time to time.\nContact me here.\nI also have a Gemini space over at gemini://tilde.club/~aspect. Go check it out if you want.","title":"About Me"},{"content":"How I installed Arch Linux on an M1 Macbook Air What is Asahi Linux? Asahi Linux is an Arch-Based distribution of Linux that is specifically designed for use on MacBooks with Apple Silicon processors. It is, weirdly enough, faster than MacOS on the same hardware. As someone who\u0026rsquo;s only computer is an M1 MacBook Air, I have long been looking for something like this. I installed Asahi back in May of 2022, and it was not a great experience, mainly because of the inability to suspend the system and the lack of GPU drivers, which made it impossible to change the brightness. This meant that I was either staring into a black void with the screen off or staring into the surface of the Sun. At the beginning of December 2022, however, GPU drivers were released on the Asahi Edge kernel, and I decided to try out Asahi again. I installed Qtile, riced it out a little, and it has become my daily driver. Here is how I did it.\nInstalling Asahi Installing Asahi is incredibly simple, requiring only one line to be pasted into the terminal. Make sure your system is updated to at least MacOS 12.3, then open a terminal and run: curl https://alx.sh | sh Go through the options, making sure not to select expert mode and allocating your desired amount of space to Asahi. As long as you follow the instructions in the installation script you should be completely fine. After the installation is complete, it will prompt you to shut down your computer. Make sure to wait until your computer is fully shut down, then press and hold the power button until you see \u0026ldquo;startup options loading.\u0026rdquo; When you see the startup options, select Asahi Linux to boot into it. You will be prompted to enter your root username and password, which should just be the username and password you have been using on MacOS. Follow the rest of the installation process, and you will be greeted by Asahi Linux in the KDE Desktop environment.\nInstalling Dependencies and the Asahi-Edge Kernel The first thing we are going to do is install the Asahi-Edge kernel. This is the kernel that contains the ability to suspend your computer as well as the GPU drivers. Following the instructions shown on Asahi Linux\u0026rsquo;s official blog post, run the following commands to update your system and install the edge kernel:\n$ sudo pacman -Syu $ sudo pacman -S linux-asahi-edge mesa-asahi-edge $ sudo update-grub Before we reboot our computer and log in to the new kernel, we are going to install some dependencies. One essential thing for any Arch user is to install an AUR helper. I use paru, so to install it run these commands:\nsudo pacman -S --needed base-devel git clone https://aur.archlinux.org/paru.git cd paru makepkg -si Now we can use paru to install all the things we need. paru -S rofi alacritty qtile-git qtile-extras-git chromium lf pcmanfm dunst picom-ibhagwan-git fish emacs-git networkmanager blueman light nitrogen Now that you have all that installed, you face one of two choices; either copy and paste my dotfiles over from my =\u0026gt; https://github.com/Aspectsides/archfiles github repo by running\ngit clone https://github.com/Aspectsides/archfile cd archfiles cp -r .config/* ~/.config or you could write your own config files. Lemme give you a few tips if you decide to do this.\nJanky fixes for problems (this is what I get for trying to run Linux on Mac) By default, there are a few problems with running Qtile as a window manager instead of something like Gnome or KDE, such as the inability to gracefully connect to Wifi or Bluetooth, or even change your volume or brightness with the built-in MacOS volume and brightness keys. We are going to work our way around that.\nWifi and Bluetooth (also wallpaper) These are relatively simple fixes. Install networkmanager and blueman using paru by running paru -S networkmanager blueman and setting your window manager to run nm-applet and blueman-applet on startup. In Qtile\u0026rsquo;s autostart.sh this looks something like this.\n#!/usr/bin/env bash nm-applet \u0026amp; nitrogen --restore \u0026amp; blueman-applet \u0026amp; This will add Wifi and Bluetooth icons to your systray if you have one. If you are using my dotfiles, this is on the internal Qtile bar. Make sure to call autostart.sh when you start up Qtile by putting this in your config.py\n@hook.subscribe.startup_once def start_once(): home = os.path.expanduser(\u0026#34;~\u0026#34;) subprocess.call([home + \u0026#34;/.config/qtile/autostart.sh\u0026#34;]) Now it should be easy to connect to WiFi or Bluetooth simply by clicking on the icon in the systray. To set a wallpaper in Qtile, I use nitrogen, which should already be installed. All you need to do is run nitrogen ~/directory_to_wallpapers and choose a wallpaper.\nVolume and Brightness In order to use MacOS\u0026rsquo;s keyboard to control volume, I put this in my config.py\nKey( [], \u0026#34;XF86AudioRaiseVolume\u0026#34;, lazy.spawn(\u0026#34;pactl set-sink-volume @DEFAULT_SINK@ +5%\u0026#34;), desc=\u0026#34;Increase volume\u0026#34;, ), Key( [], \u0026#34;XF86AudioLowerVolume\u0026#34;, lazy.spawn(\u0026#34;pactl set-sink-volume @DEFAULT_SINK@ -5%\u0026#34;), desc=\u0026#34;Decrease volume\u0026#34;, ), This is by no means an elegant method, since it only changes the volume for the audio sink that is currently being used, but it is the only thing that worked for me. Brightness is a bit more problematic because of the nature of the graphics driver. As far as I know, the only way to change the brightness of the display is to do it from KDE itself. In order to change the brightness in Qtile, I had to use the third party program known as light. It should already be installed, so just add this into your config.py\nKey( [], \u0026#34;XF86MonBrightnessUp\u0026#34;, lazy.spawn(\u0026#34;light -A 1\u0026#34;), desc=\u0026#34;Brightness Up\u0026#34;, ), Key( [], \u0026#34;XF86MonBrightnessDown\u0026#34;, lazy.spawn(\u0026#34;light -U 1\u0026#34;), desc=\u0026#34;Brightness Down\u0026#34;, ), Using Spotify and Discord The official clients for Spotify and Discord are not available on the aarch64 architecture, so we\u0026rsquo;re gonna need some alternatives. I include this part because my only friends are on Discord and I physically cannot work with music, so these two apps are very important to me. Fortunately, this is a pretty easy fix. For Discord, just install ArmCord, a Discord client made specifically for the Arm64 architecture. Install it with paru -S armcord-bin. For Spotify, I use Spotify-TUI in combination with Spotifyd to play music using Spotify\u0026rsquo;s API. I\u0026rsquo;m not gonna cover the installation process here, but this is a really good video tutorial on this exact topic.\nFinal Thoughts Now that GPU drivers have been released for Asahi Linux, it is truly a viable OS for daily driving on a Mac. I have had a really good experience with it over the past few days, and I strongly encourage you to go and try it out.\n","permalink":"https://aspectsides.github.io/posts/asahilinux/","summary":"How I installed Arch Linux on an M1 Macbook Air What is Asahi Linux? Asahi Linux is an Arch-Based distribution of Linux that is specifically designed for use on MacBooks with Apple Silicon processors. It is, weirdly enough, faster than MacOS on the same hardware. As someone who\u0026rsquo;s only computer is an M1 MacBook Air, I have long been looking for something like this. I installed Asahi back in May of 2022, and it was not a great experience, mainly because of the inability to suspend the system and the lack of GPU drivers, which made it impossible to change the brightness.","title":"How I installed Arch Linux on an M1 Macbook Air"},{"content":"Why Vimwiki is the Best Notetaking Sofware What is Vimwiki? It\u0026rsquo;s a bit difficult to explain Vimwiki, but at its core, Vimwiki is a notetaking plugin for Vim that allows you to make your own personal wiki. It\u0026rsquo;s really easy to organize notes and create links between them. You can do so many things with Vimwiki, and Vimwiki has all but replaced Emacs Org Mode for me, as it is now much easier to organize my notes with Vimwiki than just shove all of my Org files in a directory in my home folder. =\u0026gt; https://github.com/vimwiki/vimwiki Vimwiki Github\nInstallation Vimwiki was made for Vim, and as far as I know, it does not officially support Neovim yet. You can still use it with Neovim, though. To install Vimwiki on Neovim, simply plug \u0026ldquo;vimwiki/vimwiki\u0026rdquo; into your package manager. For example, with Packer, it looks something like this:\nuse {\u0026#39;vimwiki/vimwiki\u0026#39;} However, this installs Vimwiki with its default syntax, which is this weird version of Markdown that I really don\u0026rsquo;t like. So, I put this in my plugins.lua:\nuse { \u0026#39;vimwiki/vimwiki\u0026#39;, config = function() vim.g.vimwiki_list = { { path = \u0026#39;/home/$USER/Documents/vimwiki\u0026#39;, syntax = \u0026#39;markdown\u0026#39;, ext = \u0026#39;.md\u0026#39;, } } end } This changes the syntax for files created using Vimwiki to Markdown syntax, as well as changing the file extensions to .md. It also changes your Vimwiki\u0026rsquo;s location from the default ~/vimwiki to a folder in your Documents directory named Vimwiki. Much better. To finish the installation, restart Neovim.\nUsage Creating Index.md and a new note. In order to open your index.md file, which is sort of like the home page for your Vimwiki, the default keybinding is \u0026lt;leader\u0026gt; ww. This will create an index.wiki file in the specified path, which in our case is Documents/wimwiki. This document will be blank since you haven\u0026rsquo;t put anything in it yet, so lets change that. In order to create a new Vimwiki page, simply type the title of the page, highlight the title, go into normal mode, and press the return key. That converts the selected text into a link and creates a new document with the specified title.\n[Quick Notes](Quick Notes) Press enter again to jump to the newly created document. At this point, you can just write whatever you want in markdown and :w to save.\nTodo Lists Todo lists are incredibly convenient to manage in Vimwiki. Just create a new note named Todo. To create a todo list in your newly created document, put your todo in this syntax.\n* [ ] Write a blog post about Vimwiki. Now every time you press return, a new todo will automatically be created for you. I suggest following the rules for a todo.txt file just because that\u0026rsquo;s what I do, but organize your todos however you like. In order to mark a todo as done, simply hit ctrl-space while in normal mode with your cursor on the todo entry.\nThese are the only two features of Vimwiki that I actually use, so those will be the only ones I\u0026rsquo;m covering in this post, but there is another really cool feature in Vimwiki called diary. Brodie Robertson has a superb video covering this feature on his =\u0026gt; https://www.youtube.com/watch?v=FsX3SpHiuYw Youtube channel\nFinal Thoughts Vimwiki is a superb note taking sofware, and I\u0026rsquo;m basically using it full-time now for everything from school to todo to blog posts to jotting down quick notes. In fact, I\u0026rsquo;m writing this blog post in it right now. It\u0026rsquo;s just so convenient for me, and I suggest you try it out as well.\n","permalink":"https://aspectsides.github.io/posts/vimwiki/","summary":"Why Vimwiki is the Best Notetaking Sofware What is Vimwiki? It\u0026rsquo;s a bit difficult to explain Vimwiki, but at its core, Vimwiki is a notetaking plugin for Vim that allows you to make your own personal wiki. It\u0026rsquo;s really easy to organize notes and create links between them. You can do so many things with Vimwiki, and Vimwiki has all but replaced Emacs Org Mode for me, as it is now much easier to organize my notes with Vimwiki than just shove all of my Org files in a directory in my home folder.","title":"Vimwiki"},{"content":"Catppuccin: My Favorite Colorscheme Catppuccin is a relatively new colorscheme. Released just about a year ago, Catppuccin has quickly grown to be one of the most popular colorschemes, up there with Gruvbox and Nord, my other two favorite colorschemes that I have used in the past. There are a few things that set Catppuccin apart from the rest, though.\n1. It\u0026rsquo;s colorful. My two favorite colorschemes of all time are Nord and Catppuccin. What gives Catppuccin the edge over Nord in my opinion, though, is that it\u0026rsquo;s very colorful. In fact, that\u0026rsquo;s one of Catppuccin\u0026rsquo;s core values; color is better than no color. Or something like that. Nord, on the other hand, is relatively colorless. I absolutely love Nord\u0026rsquo;s background color, but the other colors in the pallete just don\u0026rsquo;t pop out to me as much. After about a year of daily driving a Nord machine, I came to realize; Nord is slightly depressing. It\u0026rsquo;s still a great colorscheme, it just lacks in color. If Catppuccin didn\u0026rsquo;t have as much color as it does, I would use Nord.\n2. A huge selection of ports. Catppuccin has, as far as I know, the most official ports out of any colorscheme other than Dracula and Solarized, coming in at a whopping total of 170 ports. Most of these ports are maintained by the community, but they all follow the same basic color pallete. There are Catppuccin ports for Neovim, Emacs, Polybar, Alacritty, even ST. Any program that you use, there\u0026rsquo;s likely a Catppuccin port for it, found over on the official Catppuccin repository over at =\u0026gt; https://github.com/catppuccin/catppuccin the Catppuccin GitHub page\n3. Different flavors based on your preferences. Catppuccin has four official flavors, the aptly named Mocha, Macchiato, Frappe, and Latte, ordered from darkest to lightest. Mocha, Macchiato and Frappe are the dark themes, while Frappe is Catppuccin\u0026rsquo;s light theme. I really love Mocha\u0026rsquo;s color pallete, and it\u0026rsquo;s what I\u0026rsquo;m using on my system right now. It has a really nice dark blue background, and is contrasty enough to be easy to read but also extremely nice to look at. There are also some community flavors such as Oledpuccin, which is Catppuccin except black for OLED screens. It looks very nice, but I don\u0026rsquo;t have an OLED screen so I will probably never use it.\n4. A large variety of accent colors. To add your own personal pop to Catppuccin, you can choose from one of 14 accent colors, ranging from rosewater to teal to blue to muave to lavender. My favorite accent color is the basic blue, though lavender is extremely nice as well.\n5. A very active community. Unlike other colorschemes, Catppuccin\u0026rsquo;s community is still very much active and is spitting out new ports. It\u0026rsquo;s really easy to contribute to Catppuccin too, all you need to do is make a pull request on their Github.\n","permalink":"https://aspectsides.github.io/posts/catppuccin/","summary":"Catppuccin: My Favorite Colorscheme Catppuccin is a relatively new colorscheme. Released just about a year ago, Catppuccin has quickly grown to be one of the most popular colorschemes, up there with Gruvbox and Nord, my other two favorite colorschemes that I have used in the past. There are a few things that set Catppuccin apart from the rest, though.\n1. It\u0026rsquo;s colorful. My two favorite colorschemes of all time are Nord and Catppuccin.","title":"Catppuccin"}]