[{"content":"This is the first article in a three part series in which I discuss how I write math notes with LaTeX and Neovim.\nWhy I Started Using LaTeX One thing I\u0026rsquo;ve always recognized about myself is that I have terrible handwriting. Problem is, I\u0026rsquo;m a math major. I kinda need to be able to read my lecture notes later so I don\u0026rsquo;t fail the class. That\u0026rsquo;s when I discovered this blog post by Gilles Castel. It introduced me to the magic of Neovim combined with LaTeX. It took me a while to learn, but after becoming proficient in LaTeX i find that I can take much more readable math notes as well as being able to type them up faster than all my clasmates. They think I\u0026rsquo;m a wizard.\nSetting up Neovim Here is what my screen looks like when I\u0026rsquo;m writing LaTeX notes:\nThe window on the left is Neovim configured with a few plugins that enhance the LaTeX experience. The window on the left is Zathura, my PDF reader that updates whenever I recompile my LaTeX file by saving it.\nI use my own Neovim configuration written in Lua. You can get it over on my Github. Configuring Neovim from scratch is very time consuming, so if you just want to get started with LaTeX you can steal my config.\nPlugins There are a few choice plugins that I find greatly enhances my efficiency whenever I\u0026rsquo;m typing LaTeX. The first is vimtex. You can install this plugin using your preferred package manager. I use packer, so I put\nuse \u0026#39;lervag/vimtex\u0026#39; in my plugins.lua. VimTex is a filetype plugin for .tex files that makes it much easier to actively compile LaTeX files in Neovim. Simply run :VimtexCompile while in a LaTeX file and you should see your default PDF reader open with the compiled PDF. I bound this to \u0026lt;leader\u0026gt;ll for easier access.\nkeymap(\u0026#34;n\u0026#34;, \u0026#34;\u0026lt;leader\u0026gt;ll\u0026#34;, \u0026#34;:VimtexCompile\u0026lt;CR\u0026gt;\u0026#34;, opts) The second plugin that I use is a snippets plugin called LuaSnip. In Gilles Castel\u0026rsquo;s article, he uses UltiSnips, which is written in Vimscript. You can use either, but I prefer Luasnip because the rest of my config is written in Lua. Install LuaSnip with\nuse \u0026#39;L3MON4D3/LuaSnip\u0026#39; Luasnip allows me to type otherwise complicated Lua functions with only a few keypresses. For example, beg expands to\n\\begin{} \\end{} These various snippets are ported over from Gilles\u0026rsquo; UltiSnips and are packaged at a repository over on Github. Install them with\nuse \u0026#39;iurimateus/luasnip-latex-snippets.nvim\u0026#39; Now that you have set up Neovim to work well with LaTeX, it\u0026rsquo;s time to start learning the language. In the next part of this series, I will go over the basics of LaTeX and a few tricks I use involving VimTex and snippets. Now go learn some LaTeX.\n","permalink":"https://aspectsides.github.io/posts/notes-1/","summary":"This is the first article in a three part series in which I discuss how I write math notes with LaTeX and Neovim.\nWhy I Started Using LaTeX One thing I\u0026rsquo;ve always recognized about myself is that I have terrible handwriting. Problem is, I\u0026rsquo;m a math major. I kinda need to be able to read my lecture notes later so I don\u0026rsquo;t fail the class. That\u0026rsquo;s when I discovered this blog post by Gilles Castel.","title":"Setting up Neovim for Editing LaTeX"},{"content":"Org Roam; The New best Notetaking Software for the Zettelkasten method Why not Obsidian? or Vimwiki? I have hopped notetaking software more times than I can count. When I first had the need to take notes, I did them in Google Docs and saved them to Google Drive. This was terrible, and I have no idea what by 13 year old self was doing. When I got slightly older and wiser, I discovered Evernote and transitioned over to that. And Evernote was… fine. I have nothing negative to say about Evernote. Problem is, it’s basically a glorified file manager that opens plain text files. And I didn’t like that. Also, at this point, I was getting into the concept of building my own second brain, which requires the linking together of notes. And Evernote didn’t have any intuitive way to do this. So I switched over to Notion. Then Obsidian. I really don’t have anything negative to say about those either except that they are Electron apps, and don’t have Vim keybindings which I was becoming increasingly reliant on those days. Then I found Vimwiki. It had everything that I wanted except for a visualizer for my second brain. I used it for a while but I needed to flex that second brain visualizer. That’s when I found Org Roam.\nWhat is Org Roam? Org roam is a replica of Roam Research for Emacs and Org Mode. It encourages the linking together of ideas and notes, and is a great tool for building your personal second brain. It comes with all the benefits and power of Org-Mode, but adds an extra layer of usability and ease of linking to your documents. Let’s get started with installing it.\nInstallation Disclaimer: I use a distribution of Emacs called Doom Emacs, so the following steps will be tailored for Doom.\nTo install Org-Roam on Doom Emacs, in your init.el look for the line that says org. Then, change it to (org +roam2). Run doom sync in your shell to reload Doom, and you should have org roam installed. There is one more thing we have to do before we start off with using Org Roam though. In your config.el, add the following line:\n(setq org-roam-directory \u0026quot;~/Documents/roam\u0026quot;) Obviously, change the directory to whatever directory you would like your roam to be stored in. Make sure the directory exists first, though.\nUsing Org Roam To create your first note, you can hit \u0026lt;space\u0026gt; nrn in Doom with evil keybindings. After Emacs compiles the sql database required to run Org Roam, it will open the file for you. Org Roam notes follow Org Mode syntax, so everything you can do in Org Mode is doable in Org Roam. Try adding some content to your file. In order to link to another note or create another note and link to it, you can press \u0026lt;space\u0026gt; nri. Type the name of the desired note and press enter. Emacs will open the note in a split which you can then finalize and insert by pressing ctrl-c ctrl-c. To find and open a note, you can use the key combination \u0026lt;space\u0026gt; nrf. This allows you to search through all your notes.\nConclusion This is a very barebones guide on what I think is the most powerful tool in my daily workflow right now. I will make additional articles about my workflow and the extensions I use to make my experience even more awesome, but for now I just wanted to get this out here. I’m officially an Emacs user again.\n","permalink":"https://aspectsides.github.io/posts/orgroam/","summary":"Org Roam; The New best Notetaking Software for the Zettelkasten method Why not Obsidian? or Vimwiki? I have hopped notetaking software more times than I can count. When I first had the need to take notes, I did them in Google Docs and saved them to Google Drive. This was terrible, and I have no idea what by 13 year old self was doing. When I got slightly older and wiser, I discovered Evernote and transitioned over to that.","title":"Org Roam"},{"content":"About Me Hey. My name is Daniel, and I\u0026rsquo;m a C++ dev and firmly believe in Emacs supremacy and am an open source evangalist. I use Arch Linux on a daily basis.\nI also play Overwatch from time to time.\nContact me here.\nI also have a Gemini space over at gemini://tilde.club/~aspect. Go check it out if you want.\n","permalink":"https://aspectsides.github.io/aboutme/","summary":"About Me Hey. My name is Daniel, and I\u0026rsquo;m a C++ dev and firmly believe in Emacs supremacy and am an open source evangalist. I use Arch Linux on a daily basis.\nI also play Overwatch from time to time.\nContact me here.\nI also have a Gemini space over at gemini://tilde.club/~aspect. Go check it out if you want.","title":"About Me"},{"content":"Why Vimwiki is the Best Notetaking Sofware What is Vimwiki? It\u0026rsquo;s a bit difficult to explain Vimwiki, but at its core, Vimwiki is a notetaking plugin for Vim that allows you to make your own personal wiki. It\u0026rsquo;s really easy to organize notes and create links between them. You can do so many things with Vimwiki, and Vimwiki has all but replaced Emacs Org Mode for me, as it is now much easier to organize my notes with Vimwiki than just shove all of my Org files in a directory in my home folder. =\u0026gt; https://github.com/vimwiki/vimwiki Vimwiki Github\nInstallation Vimwiki was made for Vim, and as far as I know, it does not officially support Neovim yet. You can still use it with Neovim, though. To install Vimwiki on Neovim, simply plug \u0026ldquo;vimwiki/vimwiki\u0026rdquo; into your package manager. For example, with Packer, it looks something like this:\nuse {\u0026#39;vimwiki/vimwiki\u0026#39;} However, this installs Vimwiki with its default syntax, which is this weird version of Markdown that I really don\u0026rsquo;t like. So, I put this in my plugins.lua:\nuse { \u0026#39;vimwiki/vimwiki\u0026#39;, config = function() vim.g.vimwiki_list = { { path = \u0026#39;/home/$USER/Documents/vimwiki\u0026#39;, syntax = \u0026#39;markdown\u0026#39;, ext = \u0026#39;.md\u0026#39;, } } end } This changes the syntax for files created using Vimwiki to Markdown syntax, as well as changing the file extensions to .md. It also changes your Vimwiki\u0026rsquo;s location from the default ~/vimwiki to a folder in your Documents directory named Vimwiki. Much better. To finish the installation, restart Neovim.\nUsage Creating Index.md and a new note. In order to open your index.md file, which is sort of like the home page for your Vimwiki, the default keybinding is \u0026lt;leader\u0026gt; ww. This will create an index.wiki file in the specified path, which in our case is Documents/wimwiki. This document will be blank since you haven\u0026rsquo;t put anything in it yet, so lets change that. In order to create a new Vimwiki page, simply type the title of the page, highlight the title, go into normal mode, and press the return key. That converts the selected text into a link and creates a new document with the specified title.\n[Quick Notes](Quick Notes) Press enter again to jump to the newly created document. At this point, you can just write whatever you want in markdown and :w to save.\nTodo Lists Todo lists are incredibly convenient to manage in Vimwiki. Just create a new note named Todo. To create a todo list in your newly created document, put your todo in this syntax.\n* [ ] Write a blog post about Vimwiki. Now every time you press return, a new todo will automatically be created for you. I suggest following the rules for a todo.txt file just because that\u0026rsquo;s what I do, but organize your todos however you like. In order to mark a todo as done, simply hit ctrl-space while in normal mode with your cursor on the todo entry.\nThese are the only two features of Vimwiki that I actually use, so those will be the only ones I\u0026rsquo;m covering in this post, but there is another really cool feature in Vimwiki called diary. Brodie Robertson has a superb video covering this feature on his =\u0026gt; https://www.youtube.com/watch?v=FsX3SpHiuYw Youtube channel\nFinal Thoughts Vimwiki is a superb note taking sofware, and I\u0026rsquo;m basically using it full-time now for everything from school to todo to blog posts to jotting down quick notes. In fact, I\u0026rsquo;m writing this blog post in it right now. It\u0026rsquo;s just so convenient for me, and I suggest you try it out as well.\n","permalink":"https://aspectsides.github.io/posts/vimwiki/","summary":"Why Vimwiki is the Best Notetaking Sofware What is Vimwiki? It\u0026rsquo;s a bit difficult to explain Vimwiki, but at its core, Vimwiki is a notetaking plugin for Vim that allows you to make your own personal wiki. It\u0026rsquo;s really easy to organize notes and create links between them. You can do so many things with Vimwiki, and Vimwiki has all but replaced Emacs Org Mode for me, as it is now much easier to organize my notes with Vimwiki than just shove all of my Org files in a directory in my home folder.","title":"Vimwiki"},{"content":"Catppuccin: My Favorite Colorscheme Catppuccin is a relatively new colorscheme. Released just about a year ago, Catppuccin has quickly grown to be one of the most popular colorschemes, up there with Gruvbox and Nord, my other two favorite colorschemes that I have used in the past. There are a few things that set Catppuccin apart from the rest, though.\n1. It\u0026rsquo;s colorful. My two favorite colorschemes of all time are Nord and Catppuccin. What gives Catppuccin the edge over Nord in my opinion, though, is that it\u0026rsquo;s very colorful. In fact, that\u0026rsquo;s one of Catppuccin\u0026rsquo;s core values; color is better than no color. Or something like that. Nord, on the other hand, is relatively colorless. I absolutely love Nord\u0026rsquo;s background color, but the other colors in the pallete just don\u0026rsquo;t pop out to me as much. After about a year of daily driving a Nord machine, I came to realize; Nord is slightly depressing. It\u0026rsquo;s still a great colorscheme, it just lacks in color. If Catppuccin didn\u0026rsquo;t have as much color as it does, I would use Nord.\n2. A huge selection of ports. Catppuccin has, as far as I know, the most official ports out of any colorscheme other than Dracula and Solarized, coming in at a whopping total of 170 ports. Most of these ports are maintained by the community, but they all follow the same basic color pallete. There are Catppuccin ports for Neovim, Emacs, Polybar, Alacritty, even ST. Any program that you use, there\u0026rsquo;s likely a Catppuccin port for it, found over on the official Catppuccin repository over at =\u0026gt; https://github.com/catppuccin/catppuccin the Catppuccin GitHub page\n3. Different flavors based on your preferences. Catppuccin has four official flavors, the aptly named Mocha, Macchiato, Frappe, and Latte, ordered from darkest to lightest. Mocha, Macchiato and Frappe are the dark themes, while Frappe is Catppuccin\u0026rsquo;s light theme. I really love Mocha\u0026rsquo;s color pallete, and it\u0026rsquo;s what I\u0026rsquo;m using on my system right now. It has a really nice dark blue background, and is contrasty enough to be easy to read but also extremely nice to look at. There are also some community flavors such as Oledpuccin, which is Catppuccin except black for OLED screens. It looks very nice, but I don\u0026rsquo;t have an OLED screen so I will probably never use it.\n4. A large variety of accent colors. To add your own personal pop to Catppuccin, you can choose from one of 14 accent colors, ranging from rosewater to teal to blue to muave to lavender. My favorite accent color is the basic blue, though lavender is extremely nice as well.\n5. A very active community. Unlike other colorschemes, Catppuccin\u0026rsquo;s community is still very much active and is spitting out new ports. It\u0026rsquo;s really easy to contribute to Catppuccin too, all you need to do is make a pull request on their Github.\n","permalink":"https://aspectsides.github.io/posts/catppuccin/","summary":"Catppuccin: My Favorite Colorscheme Catppuccin is a relatively new colorscheme. Released just about a year ago, Catppuccin has quickly grown to be one of the most popular colorschemes, up there with Gruvbox and Nord, my other two favorite colorschemes that I have used in the past. There are a few things that set Catppuccin apart from the rest, though.\n1. It\u0026rsquo;s colorful. My two favorite colorschemes of all time are Nord and Catppuccin.","title":"Catppuccin"}]